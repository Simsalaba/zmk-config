/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-helpers/helper.h"
#include "../zmk-helpers/keypos_def/keypos_42keys.h"
//#include "constants.h"
#define ___ &trans

#define DEF     0
#define NUM     1
#define CHARS   2
#define NAVI    3
#define ADJS    4
#define FUNC    5
#define WIN     6

#define HOST_OS LINUX // Needed for unicode international_chars

ZMK_BEHAVIOR(hml, hold_tap,  // left-hand HRMs
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
)

ZMK_BEHAVIOR(hmr, hold_tap,  // right-hand HRMs
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
)


// combos
#undef COMBO_TERM
#define COMBO_TERM 40  // timeout of 40ms (default is 30ms if omitted)
ZMK_COMBO(combo_copy,   &kp LS(LC(C)),  LB2 LB3, ALL)  // Ctrl + C, active on all layers
ZMK_COMBO(combo_paste,  &kp LS(LC(V)),  LB1 LB2, ALL)  // Ctrl + V, active on all layers



ZMK_LAYER(Main,
    // DEFAULT LAYER
    // .--------------------------------------------------------------.       .-----------------------------------------------------------.
    // |   ESC        |    Q    |    W   |  E/NAV | R/WIN   |    T    |       |   Y   |    U    |    I    |    O    |     P    |   BKSP   |
          &kp ESC       &kp Q    &kp W     &lt 3 E  &lt 6 R    &kp T            &kp Y      &kp U      &kp I      &kp O    &kp P  &kp DEL
    // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
    // |   CTRL/Tab   |    A    |    S   |   D    | F       |    G    |       |   H   |    J    |    K    |    L    |     Ö    |     Ä    |
          &mt LCTRL TAB &kp A    &hmr LALT S  &hmr LSHIFT D &hmr LCTRL F &kp G    &kp H   &hml RCTRL J &hml RSHIFT K &hml RALT L  &kp SEMI &kp LBKT
    // |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
    // |   SHFT       |    Z    |    X   |   C    |    V    | B/FUNC  |       |   N   |    M    |    .    |    ,    |     Å    |     NAV  |
          &kp LSHIFT    &kp Z    &kp X    &kp C    &kp V    &lt 5 B            &kp N    &kp M     &kp DOT   &kp COMMA ___  &kp SQT
    // '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
    //                                   |  GUI   |   RSE   |   SPC   |       |  ENT  |   LWR   |  LALT   |
                                          &kp LGUI  &mo 1  &kp SPACE          &mt 4 RET &mo 2 &kp BSPC
    //                                   '--------+---------+---------'       '-------+---------+---------'

)


ZMK_LAYER(Numbers,
    // NUMBERS Layer: Media and Number Pad
    // .--------------------------------------------------------------.    .-----------------------------------------------------------.
    // |     ESC      |         |        |        |         | Numlock |    |  / ?  |   7 &   |   8 *   |   9 (   |   - _    |   BKSP   |
          &kp ESC      ___    ___    ___    ___ &kp KP_NUMLOCK    &kp FSLH    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp BSPC
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |  CTRL/Tab    |         |        |        |         |         |    |   *   |   4 $   |   5 %   |   6 ^   |   , <    |          |
          &mt LCTRL TAB  ___    ___    ___    ___    ___            &kp STAR    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp COMMA  ___
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |  SHIFT       |         |        |        |         |         |    |       |   1 !   |   2 @   |   3 #   |   = +    |          |
          &kp LSHIFT     ___    ___    ___    ___    ___            ___      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  ___
    // '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
    //                                   |        |         |         |    |       |         |    0 )  |
                                          ___    ___    &kp TAB            ___        &mo 4     &kp NUMBER_0
    //                                   '--------+---------+---------'    '-------+---------+---------'
)


ZMK_LAYER(Symbols,
    // RAISE Layer: Special Chars
    // .--------------------------------------------------------------.    .-----------------------------------------------------------.
    // |       &      |   *     |    @   |   {    |    }    |    |    |    |   +   |    -    |         |         |          |   DEL    |
          &kp RS(N6)  &kp RS(BSLH)  &kp RA(N2)  &kp RS(RA(N8))  &kp RS(RA(N9)) &kp RA(N7)  &kp MINUS &kp RS(FSLH)  ___  ___  &kp RS(N0) &kp DEL
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |       #      |         |    $   |   (    |    )    |    `    |    |   !   |    _    |         |    /    |   \      |     '    |
          &kp RS(N3)  ___     &kp RA(N4)   &kp RS(N8)    &kp RS(N9) &kp RS(EQUAL)  &kp RS(N1)  &kp FSLH ___  &kp RS(N7) &kp RS(RA(N7)) &kp BSLH
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |       %      |         |    ^   |   [    |    ]    |    ~    |    |   ?   |    =    |    ,    |    <    |   >      |    ""    |
          &kp RS(N5)  ___     &kp RS(RBKT) &kp RA(N8)   &kp RA(N9) &kp RA(RBKT)  &kp RS(MINUS) &kp RS(N0) &kp COMMA &kp GRAVE &kp RS(GRAVE) &kp RS(N2)
    // '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
    //                                   |        |         |         |    |       |         |         |
                                          ___   &mo 4     ___       ___    ___     ___
    //                                   '--------+---------+---------'    '-------+---------+---------'
)

ZMK_LAYER(Navi,
    // NAVIGATION Layer: Directions
    // .--------------------------------------------------------------.    .-----------------------------------------------------------.
    // |              |         |        |        |         |         |    |       |  PG DN  |   UP    |  PG UP  |          |  PrtScn  |
          ___        ___    ___    ___    ___    ___      ___    &kp PG_DN  &kp UP    &kp PG_UP  ___     &kp LG(LS(F4))
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |     CTRL     |         |        |        |         |         |    |       |  LEFT   |  DOWN   |  RIGHT  |          | CAPS LCK |
          &kp LCTRL     ___    ___    ___    ___    ___      ___    &kp LEFT  &kp DOWN  &kp RIGHT  ___     &kp CLCK
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |     SHIFT    |         |        |        |         |         |    |       | PG HOME |         | PG END  |          |          |
          &kp LSHIFT    ___    ___    ___    ___    ___      ___    &kp HOME  ___    &kp END    ___     ___
    // '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
    //                                   |  GUI   |         |   ALT   |    |       |         |         |
                                        &kp LGUI  ___    &kp LALT      ___    ___    ___
    //                                   '--------+---------+---------'    '-------+---------+---------'
)


    ZMK_LAYER(Adjust,
    // ADJUST Layer: Setting and Configurations
    // .------------------------------------------------------------.    .-------------------------------------------------------------.
    // |        |  BT 0   |  BT 1  |  BT 2  |  BT 3   |  BT 4   |    |  BT CLR |   Rew   |         |   FFwd  | Bright Up|  Vol Up  |
         ___      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR &kp C_RW ___      &kp C_FF &kp C_BRI_UP &kp C_VOL_UP
    // |------------+---------+--------+--------+---------+---------|    |---------+---------+---------+---------+----------+----------|
    // |            |         |        |        |         |         |    |         |  Prev   |Play/Paus|  Next   |Bright Dn |  Vol Dn  |
             ___      ___         ___        ___        ___       ___      ___     &kp C_PREV &kp C_PP   &kp C_NEXT &kp C_BRI_DN &kp C_VOL_DN
    // |------------+---------+--------+--------+---------+---------|    |---------+---------+---------+---------+----------+----------|
    // |            |         |        |        |         |         |    |         |         |         |         |          |  Mute    |
             ___      ___         ___        ___        ___       ___      ___     ___     ___     ___     ___      &kp K_MUTE
    // '-------------------------------+--------+---------+---------+    |---------+---------+---------+-------------------------------'
    //                                 |  GUI   |         |  Alt    |    |         |         |         |
                                       &kp LGUI  ___    &kp LALT        ___ ___    ___
    //                                 '--------+---------+---------'    '---------+---------+---------'
)


ZMK_LAYER(Func,
    // Function Layer: Functionality
    // .--------------------------------------------------------------.    .-----------------------------------------------------------.
    // |              |         |        |        |         |         |    |       |  F7     |  F8     |  F9     |  F12     |  PrtScn  |
              ___    ___    ___    ___    ___    ___       ___   &kp F7   &kp F8    &kp F9    &kp F12    &kp LG(LS(F4))
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |     CTRL     |         |        |        |         |         |    |       |  F6     |  F5     |  F4     |  F11     | CAPS LCK |
          &kp LCTRL   ___    ___    ___    ___    ___        ___    &kp F6   &kp F5    &kp F4    &kp F11    &kp CLCK
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |     SHIFT    |         |        |        |         |         |    |       |  F3     |  F2     |  F1     |          |          |
          &kp LSHIFT  ___    ___    ___    ___    ___         ___   &kp F3   &kp F2    &kp F1    ___     ___
    // '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
    //                                   |  GUI   |         |   ALT   |    |       |         |  F10    |
                                          &kp LGUI  ___    &kp LALT      ___    ___    &kp F10
    //                                   '--------+---------+---------'    '-------+---------+---------'
)


        ZMK_LAYER(Tiling,
    // Window Layer: Windows
    // .--------------------------------------------------------------.    .-----------------------------------------------------------.
    // |              |         |        |        |         |         |    |   +   |  UL     |  UM     |  UR     |  F12     |  PrtScn  |
             ___    ___    ___    ___    ___    ___      &kp RC(RA(MINUS))  &kp RC(RA(U))  &kp RC(RA(UP))  &kp RC(RA(I))  &kp F12  &kp LG(LS(N4))
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |     CTRL     |         |        |        |         |         |    |       |  ML     |  MM     |  MR     |  F11     | CAPS LCK |
          &kp LCTRL   ___    ___    ___    ___    ___      ___              &kp RC(RA(LEFT))  &kp RC(RA(D)) &kp RC(RA(F))  &kp F11  &kp CLCK
    // |--------------+---------+--------+--------+---------+---------|    |-------+---------+---------+---------+----------+----------|
    // |     SHIFT    |         |        |        |         |         |    |   -   |  BL     |  ML     |  MR     |          |          |
          &kp LSHIFT  ___    ___    ___    ___    ___      &kp RC(RA(FSLH))   &kp RC(RA(J)) &kp RC(RA(DOWN)) &kp RC(RA(K)) ___    ___
    // '---------------------------------+--------+---------+---------+    |-------+---------+---------+-------------------------------'
    //                                   |  GUI   |         |   ALT   |    |       |         |  F10    |
                                      &kp LGUI  ___    &kp LALT        ___             ___     &kp F10
    //                                   '--------+---------+---------'    '-------+---------+---------'
)

